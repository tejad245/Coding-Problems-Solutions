Tom and Jerry (100 Marks)
Tom and Jerry have become enemies because of some misunderstanding and are interfering in each other's work.
Tom has been assigned a construction project of N units which is important for the firm. Jerry got to know about it and took an oath to make it hard for Tom to complete the project. 
Tom can do C units of work in daytime so Jerry decided to destroy D units of work in the night time.

Mr. Fred got this information and needs someone to figure out the number of days Tom will take to complete the project of N units with the given scenario. 
Can you do it for Mr. Fred?

Note: Tom will always be able to complete the project.

Input Format
The first line of input consists of numbers of test cases, T
Next T lines each consists of three space-separated integers C, D and N.

Constraints
1<= T <=100
1<= N <=10000000
1<= D < C <=N 


Output Format
For each test case, print the number of days Tom will take to complete the project in a separate line.


Sample TestCase 1
Input
2
6 2 10
4 3 10

Output
2
7

/* Read input from STDIN. Print your output to STDOUT*/

import java.io.*;
import java.util.*;
import java.lang.Math;
public class CandidateCode {
   public static void main(String args[] ) throws Exception {
      BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
      int t=Integer.parseInt(br.readLine());
      while(t>0)
      {
         String s;
         s=br.readLine();
         String[] splitStr = s.split("\\s+");
         int c=Integer.parseInt(splitStr[0]);
         int d=Integer.parseInt(splitStr[1]);
         int n=Integer.parseInt(splitStr[2]);
         int req=0;
         int count=0;
         while(req<n)
         {
            req=req+c;
            if(req>=n){
               count=count+1;
               break;
            }
            else
            {
                req=Math.abs(req-d);
            }
           
           count=count+1;
         }
         System.out.println(count);
         t=t-1;
      }
   }
}
